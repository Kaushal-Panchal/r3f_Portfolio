/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useFrame } from 'react-three-fiber'
import {  useGLTF } from '@react-three/drei'
import { getMouseDegrees } from './Utils'


function moveJoint(mouse, joint, degreeLimit = 10) {
  let degrees = getMouseDegrees(-mouse.current.x, mouse.current.y, degreeLimit)
  joint.rotation.xD = THREE.MathUtils.lerp(joint.rotation.xD || 0, degrees.y, 0.1)
  joint.rotation.yD = THREE.MathUtils.lerp(joint.rotation.yD || 0, degrees.x, 0.1)
  joint.rotation.x = THREE.Math.degToRad(joint.rotation.xD)
  joint.rotation.y = THREE.Math.degToRad(joint.rotation.yD)
}

export default function SittingIdle({mouse,...props}) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/SittingIdle.glb')
  // const { actions } = useAnimations(animations, group)
  useFrame(()=>{
    moveJoint(mouse, nodes.mixamorigNeck);
    //moveJoint(mouse, nodes.mixamorigSpine);
  })
  // useEffect(()=>{
  //   actions[Object.keys(actions)[0]].reset().fadeIn(0.1).play();
  //   return ()=>{
  //     actions[Object.keys(actions)[0]].fadeOut(0.1);
      
  //   };
  // },[])
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, -0.5]} scale={[0.27, 0.27, 0.27]}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh
          frustumCulled={false}
          material={nodes.Ch23_Belt_Mesh003_Ch23_body.material}
          geometry={nodes.Ch23_Belt_Mesh003_Ch23_body.geometry}
          skeleton={nodes.Ch23_Belt_Mesh003_Ch23_body.skeleton}
        />
        <skinnedMesh
          material={materials.Ch23_body}
          geometry={nodes.Ch23_Body_Mesh001_Skin.geometry}
          skeleton={nodes.Ch23_Body_Mesh001_Skin.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.Ch23_body}
          geometry={nodes.Ch23_Pants_Mesh005_Ch23_body.geometry}
          skeleton={nodes.Ch23_Pants_Mesh005_Ch23_body.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.Ch23_body}
          geometry={nodes.Ch23_Shirt_Mesh004_Ch23_body.geometry}
          skeleton={nodes.Ch23_Shirt_Mesh004_Ch23_body.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.Ch23_body}
          geometry={nodes.Ch23_Shoes_Mesh_Ch23_body.geometry}
          skeleton={nodes.Ch23_Shoes_Mesh_Ch23_body.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.Ch23_body}
          geometry={nodes.Ch23_Suit_Mesh002_Ch23_body.geometry}
          skeleton={nodes.Ch23_Suit_Mesh002_Ch23_body.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.Beard}
          geometry={nodes.Head_NurbsPath010_Beard.geometry}
          skeleton={nodes.Head_NurbsPath010_Beard.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.Hair}
          geometry={nodes.Head_NurbsPath010_Hair.geometry}
          skeleton={nodes.Head_NurbsPath010_Hair.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.HairBase}
          geometry={nodes.Head_NurbsPath010_HairBase.geometry}
          skeleton={nodes.Head_NurbsPath010_HairBase.skeleton}
          frustumCulled={false}
        />
        <skinnedMesh
          material={materials.Skin}
          geometry={nodes.Head_NurbsPath010_Skin.geometry}
          skeleton={nodes.Head_NurbsPath010_Skin.skeleton}
          frustumCulled={false}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/SittingIdle.glb')
